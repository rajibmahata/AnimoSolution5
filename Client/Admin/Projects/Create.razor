@page "/admin/projects/create"
@inject NavigationManager nm
@inject IRepository repo
@inject IMostrarMensajes mostrarMensajes


<div id="headerSection">
    <div class="grid50l-- vtop">
        <h5>Projects Creation</h5>
        <hr class="hr4" />
        <div class="hh-40 vtop">
            <p class="p12 colorDarkGrey">Lets add some Project to be shown in web site.</p>
        </div>
    </div>

    <div class="grid50r-- vtop">
        <h5>Options</h5>
        <hr class="hr4inverted" />
        <div class="hh-40 vtop">
            <GoBack></GoBack>
        </div>
    </div>
</div>

@if (MostrarFormulario)
{
    <FormProjects OnValidSubmit="OnValidSubmit" Project="Project" TecnosNoSeleccionados="TecnosNoSeleccionados">
    </FormProjects>

}else
{
    <LoadingAsset />
}




@code {

    private bool MostrarFormulario { get; set; } = false;

    private Projects Project = new Projects();

    private List<Tecnos> TecnosNoSeleccionados = new List<Tecnos>();

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await repo.Get<List<Tecnos>>("api/tecnos");
        TecnosNoSeleccionados = responseHttp.Response;
        MostrarFormulario = true;

    }


    private async Task OnValidSubmit()
    {
        var httpResponse = await repo.Post<Projects, int>("api/projects", Project);
        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.GetBody();
            await mostrarMensajes.MostrarMensajeError(mensajeError);
        }
        else
        {
            var ProjectId = httpResponse.Response;
            nm.NavigateTo($"admin/projects");
         
        }
    }
}
