@page "/admin/social/edit/{SocialId:int}"
@page "/admin/social/edit/{SocialId:int}/{Name}"
@using Model.Shared.Entities
@inject IRepository repo
@inject IMostrarMensajes mostrar
@inject NavigationManager nm

<div id="headerSection">
    <div class="grid50l-- vtop">
        <h5>Social Edition</h5>
        <hr class="hr4" />
        <div class="hh-40 vtop">
            <p class="p12 colorDarkGrey">Edit your record here</p>
        </div>
    </div>

    <div class="grid50r-- vtop">
        <h5>Options</h5>
        <hr class="hr4inverted" />
        <div class="hh-40 vtop">
            <GoBack></GoBack>
        </div>
    </div>
</div>


@if (social == null)
    {
      <LoadingAsset />
    }
else
    {
        <SocialForm OnValidSubmit="HandleEdit" social="social" />
    }



@code {

    [Parameter] public int SocialId { get; set; }
    [Parameter] public string Name { get; set; } 
    private Social social;

    
  

    protected async override Task OnInitializedAsync()
    {
      
        var httpResponse = await repo.Get<Social>($"api/socials/{SocialId}");

        if (httpResponse.Error)
        {            
          await mostrar.MostrarMensajeError(await httpResponse.GetBody());            
        }
        else
        {
            social = httpResponse.Response;
        }

    }

    private async Task HandleEdit()
    {
        var httpResponse = await repo.Put("api/socials", social);

        if (httpResponse.Error)
        {
            await mostrar.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            nm.NavigateTo("admin/social");
        }
    }

   
}
