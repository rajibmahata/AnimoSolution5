@page "/admin/news/edit/{NewsId:int}"
@page "/admin/news/edit/{NewsId:int}/{Title}"
@inject NavigationManager nm
@inject IRepository repo
@inject IMostrarMensajes mostrar


<div id="headerSection">
    <div class="grid50l-- vtop">
        <h5>News Edition</h5>
        <hr class="hr4" />
        <div class="hh-40 vtop">
            <p class="p12 colorDarkGrey">This is to edit the New </p>
        </div>
    </div>

    <div class="grid50r-- vtop">
        <h5>Options</h5>
        <hr class="hr4inverted" />
        <div class="hh-40 vtop">
            <GoBack></GoBack>
            <a href="admin/projects/addimages/@NewsId/@Title" class="btn btn-success">Add Images</a>
        </div>
    </div>
</div>


@if (news == null)
{
    <LoadingAsset />
}
else
{
    <NewsForm OnValidSubmit="handleEdit" News="news" Users="users" />
}






@code {

    [Parameter] public int NewsId { get; set; }
    [Parameter] public string Title { get; set; }
    News news;
    private List<Users> users = new List<Users>();
    private List<Tecnos> TecnosSelected = new List<Tecnos>();
    private List<Images> relatedImages { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await LoadUsers();

        var httpResponse = await repo.Get<News>($"api/news/{NewsId}");

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.GetBody();
            await mostrar.MostrarMensajeError(mensajeError);
        }
        else
        {
            var model = httpResponse.Response;
            news = model;
        }

    }

    private async Task LoadUsers()
    {
        var responseUsers = await repo.Get<List<Users>>("api/users");
        users = responseUsers.Response;
    }


    private async Task handleEdit()
    {
        var httpResponse = await repo.Put("api/news", news);

        if (httpResponse.Error)
        {
            await mostrar.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            nm.NavigateTo($"admin/news");
        }

        return;
    }


}